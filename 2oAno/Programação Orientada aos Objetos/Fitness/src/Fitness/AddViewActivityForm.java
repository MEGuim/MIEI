
package Fitness;

import java.awt.Component;
import java.awt.Container;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;

/**
 * Classe para a criação de janelas
 *
 * @author Bruno Pereira
 * @author João Mano
 * @author Miguel Guimarães
 * @version 2014
 */
public class AddViewActivityForm extends javax.swing.JFrame {

	/**
	 * Creates new form AddActivityForm
	 *
	 * @param parent
	 * @param fit
	 * @param u
	 */
	public AddViewActivityForm(UserForm parent, FitnessUM fit, User u) {
		initComponents();
		this.parent = parent;
		this.fit = fit;
		this.u = u;
		this.setName("add");
		this.setTitle("Adicionar novo evento");
		this.setLocationRelativeTo(parent);
		this.cboxSports.setSelectedIndex(12);
		int dia = new GregorianCalendar().get(Calendar.DAY_OF_MONTH);
		int mes = new GregorianCalendar().get(Calendar.MONTH);
		int ano = new GregorianCalendar().get(Calendar.YEAR);
		this.cboxDia.setSelectedItem(dia);
		this.cboxMes.setSelectedIndex(mes);
		this.cboxAno.setSelectedItem(ano);

	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelDay = new javax.swing.JLabel();
        labelMonth = new javax.swing.JLabel();
        labelYear = new javax.swing.JLabel();
        labelTime = new javax.swing.JLabel();
        labelDate = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        cboxSports = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboxDia = new javax.swing.JComboBox();
        cboxMes = new javax.swing.JComboBox();
        cboxAno = new javax.swing.JComboBox();
        textHoras = new javax.swing.JTextField();
        textMins = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        textClima = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        textDistanciaH = new javax.swing.JTextField();
        textDistanciaV = new javax.swing.JTextField();
        labelDistH = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        spinnerPessoal = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        spinnerAdversario = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textCalorias = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cboxHoraData = new javax.swing.JComboBox();
        cboxMinsData = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        butOKAddAct = new javax.swing.JButton();
        butCancelAddAct = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(513, 403));
        setMinimumSize(new java.awt.Dimension(513, 403));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "NOVA ATIVIDADE"));
        jPanel1.setMaximumSize(new java.awt.Dimension(491, 381));
        jPanel1.setMinimumSize(new java.awt.Dimension(491, 381));

        labelName.setText("Nome");

        jLabel2.setText("Desporto");

        labelDay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDay.setText("Dia");
        labelDay.setMaximumSize(new java.awt.Dimension(45, 14));
        labelDay.setMinimumSize(new java.awt.Dimension(45, 14));
        labelDay.setPreferredSize(new java.awt.Dimension(45, 14));

        labelMonth.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMonth.setText("Mês");
        labelMonth.setMaximumSize(new java.awt.Dimension(95, 14));
        labelMonth.setMinimumSize(new java.awt.Dimension(95, 14));
        labelMonth.setPreferredSize(new java.awt.Dimension(95, 14));

        labelYear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelYear.setText("Ano");
        labelYear.setMaximumSize(new java.awt.Dimension(68, 14));
        labelYear.setMinimumSize(new java.awt.Dimension(68, 14));
        labelYear.setPreferredSize(new java.awt.Dimension(68, 14));

        labelTime.setText("Duração");

        labelDate.setText("Data");

        textName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textName.setMaximumSize(new java.awt.Dimension(244, 28));
        textName.setMinimumSize(new java.awt.Dimension(244, 28));
        textName.setPreferredSize(new java.awt.Dimension(244, 28));

        cboxSports.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yoga", "Aerobics", "Swimming", "Indoor Cycling", "Handball", "Basketball", "Table Tennis", "Boxing", "Badminton", "Volleyball", "Football", "Beach Volleyball", "Running", "Skating", "Sailing", "Walking", "Tennis", "Skiing", "Cycling", "Mountain Biking", "Orienteering", "Snowboarding", "Polo" }));
        cboxSports.setMaximumSize(new java.awt.Dimension(244, 23));
        cboxSports.setMinimumSize(new java.awt.Dimension(244, 23));
        cboxSports.setPreferredSize(new java.awt.Dimension(244, 23));
        cboxSports.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxSportsItemStateChanged(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Horas");
        jLabel1.setMaximumSize(new java.awt.Dimension(40, 25));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Mins");
        jLabel3.setMaximumSize(new java.awt.Dimension(40, 25));

        cboxDia.setFont(new java.awt.Font("Dialog", 0, 9)); // NOI18N
        cboxDia.setModel(new javax.swing.DefaultComboBoxModel(new Integer[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31}));
        cboxDia.setMaximumSize(new java.awt.Dimension(45, 21));
        cboxDia.setMinimumSize(new java.awt.Dimension(45, 21));
        cboxDia.setPreferredSize(new java.awt.Dimension(45, 21));

        cboxMes.setFont(new java.awt.Font("Dialog", 0, 9)); // NOI18N
        cboxMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"}));
        cboxMes.setMaximumSize(new java.awt.Dimension(95, 21));
        cboxMes.setMinimumSize(new java.awt.Dimension(95, 21));
        cboxMes.setPreferredSize(new java.awt.Dimension(95, 21));

        cboxAno.setFont(new java.awt.Font("Dialog", 0, 9)); // NOI18N
        cboxAno.setModel(new javax.swing.DefaultComboBoxModel(new Integer[] { 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014}));
        cboxAno.setMaximumSize(new java.awt.Dimension(68, 21));
        cboxAno.setMinimumSize(new java.awt.Dimension(68, 21));
        cboxAno.setPreferredSize(new java.awt.Dimension(68, 21));

        textHoras.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textHoras.setMaximumSize(new java.awt.Dimension(45, 28));
        textHoras.setMinimumSize(new java.awt.Dimension(45, 28));
        textHoras.setPreferredSize(new java.awt.Dimension(45, 28));

        textMins.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textMins.setMaximumSize(new java.awt.Dimension(45, 28));
        textMins.setMinimumSize(new java.awt.Dimension(45, 28));
        textMins.setPreferredSize(new java.awt.Dimension(45, 28));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Clima"));
        jPanel2.setMaximumSize(new java.awt.Dimension(112, 120));
        jPanel2.setMinimumSize(new java.awt.Dimension(112, 120));
        jPanel2.setPreferredSize(new java.awt.Dimension(112, 74));

        textClima.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textClima.setMaximumSize(new java.awt.Dimension(76, 28));
        textClima.setMinimumSize(new java.awt.Dimension(76, 28));
        textClima.setPreferredSize(new java.awt.Dimension(76, 28));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textClima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textClima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Distância"));
        jPanel3.setMaximumSize(new java.awt.Dimension(137, 140));
        jPanel3.setMinimumSize(new java.awt.Dimension(137, 120));

        textDistanciaH.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textDistanciaH.setMaximumSize(new java.awt.Dimension(52, 28));
        textDistanciaH.setMinimumSize(new java.awt.Dimension(52, 28));
        textDistanciaH.setPreferredSize(new java.awt.Dimension(52, 28));

        textDistanciaV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textDistanciaV.setMaximumSize(new java.awt.Dimension(52, 28));
        textDistanciaV.setMinimumSize(new java.awt.Dimension(52, 28));
        textDistanciaV.setPreferredSize(new java.awt.Dimension(52, 28));

        labelDistH.setText("KMs");

        jLabel8.setText("KMs");

        jLabel5.setText("Vertical");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(textDistanciaH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelDistH))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(textDistanciaV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addComponent(jLabel5))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDistanciaH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDistH))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textDistanciaV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Pontuação"));
        jPanel4.setMaximumSize(new java.awt.Dimension(168, 140));
        jPanel4.setMinimumSize(new java.awt.Dimension(168, 120));
        jPanel4.setPreferredSize(new java.awt.Dimension(168, 140));

        spinnerPessoal.setMaximumSize(new java.awt.Dimension(59, 28));
        spinnerPessoal.setMinimumSize(new java.awt.Dimension(59, 28));
        spinnerPessoal.setPreferredSize(new java.awt.Dimension(59, 28));

        jLabel9.setText("Pessoal");

        spinnerAdversario.setMaximumSize(new java.awt.Dimension(59, 28));
        spinnerAdversario.setMinimumSize(new java.awt.Dimension(59, 28));
        spinnerAdversario.setPreferredSize(new java.awt.Dimension(59, 28));

        jLabel10.setText("Adversário");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spinnerAdversario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerPessoal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerPessoal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerAdversario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setText("Calorias");

        textCalorias.setEditable(false);
        textCalorias.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textCalorias.setEnabled(false);
        textCalorias.setMaximumSize(new java.awt.Dimension(60, 28));
        textCalorias.setMinimumSize(new java.awt.Dimension(60, 28));
        textCalorias.setPreferredSize(new java.awt.Dimension(60, 28));

        jLabel7.setText("Hora");

        cboxHoraData.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        cboxHoraData.setModel(new javax.swing.DefaultComboBoxModel(new Integer[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23}));
        cboxHoraData.setMaximumSize(new java.awt.Dimension(45, 21));
        cboxHoraData.setMinimumSize(new java.awt.Dimension(45, 21));
        cboxHoraData.setPreferredSize(new java.awt.Dimension(45, 21));

        cboxMinsData.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        cboxMinsData.setModel(new javax.swing.DefaultComboBoxModel(new Integer[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59}));
        cboxMinsData.setMaximumSize(new java.awt.Dimension(45, 21));
        cboxMinsData.setMinimumSize(new java.awt.Dimension(45, 21));
        cboxMinsData.setPreferredSize(new java.awt.Dimension(45, 21));

        jLabel11.setText("h");

        jLabel12.setText("m");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelName)
                            .addComponent(labelDate)
                            .addComponent(jLabel7))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboxDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboxMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(cboxMinsData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel12)))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cboxAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(textName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboxSports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cboxHoraData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel11)
                                .addGap(194, 194, 194))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelTime)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textMins, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textCalorias, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelName)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboxSports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDate)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboxDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboxMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboxAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cboxHoraData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxMinsData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTime)
                    .addComponent(textHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textMins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(textCalorias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        butOKAddAct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fitness/ok2.png"))); // NOI18N
        butOKAddAct.setToolTipText("Adicionar nova atividade");
        butOKAddAct.setIconTextGap(10);
        butOKAddAct.setMargin(new java.awt.Insets(2, 9, 2, 9));
        butOKAddAct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butOKAddActActionPerformed(evt);
            }
        });

        butCancelAddAct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fitness/close.png"))); // NOI18N
        butCancelAddAct.setIconTextGap(10);
        butCancelAddAct.setMargin(new java.awt.Insets(2, 9, 2, 9));
        butCancelAddAct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCancelAddActActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(butCancelAddAct)
                .addGap(18, 18, 18)
                .addComponent(butOKAddAct)
                .addGap(196, 196, 196))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butCancelAddAct)
                    .addComponent(butOKAddAct))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		this.parent.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void butOKAddActActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butOKAddActActionPerformed
		boolean ok = true;
		ArrayList<Component> comps = (ArrayList<Component>) AddViewActivityForm.getAllComponents(this);
		for (int i = 0; i < comps.size() && ok; i++) {
			Component c = comps.get(i);
			if (c.isEnabled()) {
				if (c instanceof JTextField) {
					JTextField text = (JTextField) c;
					if (text.getText().isEmpty()) {
						ok = false;
					}
				}
			}
		}

		if (ok) {
			try {
				String name = this.textName.getText().trim();
				String sport = ((String) this.cboxSports.getSelectedItem()).trim();
				int day = Integer.parseInt(this.cboxDia.getSelectedItem().toString().trim());
				int month = this.cboxMes.getSelectedIndex();
				int year = Integer.parseInt(this.cboxAno.getSelectedItem().toString().trim());
				int hour = Integer.parseInt(this.cboxHoraData.getSelectedItem().toString().trim());
				int min = Integer.parseInt(this.cboxMinsData.getSelectedItem().toString().trim());
				GregorianCalendar date = new GregorianCalendar(year, month, day, hour, min);
				int horas = Integer.parseInt(this.textHoras.getText().trim());
				int mins = Integer.parseInt(this.textMins.getText().trim());
				int time = (horas * 60) + mins;
				boolean insere = false;

				switch (sport) {
					case "Running":
					case "Cycling":
					case "Walking":
					case "Sailing":
					case "Skating":
					case "Orienteering": {
						String clima = this.textClima.getText().trim();
						double distanciaH = Double.parseDouble(this.textDistanciaH.getText().trim());
						switch (sport) {
							case "Running":
								insere = u.addActivity(new Running(name, date, time, distanciaH, clima), "Running");
								break;
							case "Cycling":
								insere = u.addActivity(new Cycling(name, date, time, distanciaH, clima), "Cycling");
								break;
							case "Walking":
								insere = u.addActivity(new Walking(name, date, time, distanciaH, clima), "Walking");
								break;
							case "Sailing":
								insere = u.addActivity(new Sailing(name, date, time, distanciaH, clima), "Sailing");
								break;
							case "Skating":
								insere = u.addActivity(new Skating(name, date, time, distanciaH, clima), "Skating");
								break;
							case "Orienteering":
								insere = u.addActivity(new Orienteering(name, date, time, distanciaH, clima), "Orienteering");
								break;
							default:
								break;
						}
						break;
					}

					case "Snowboarding":
					case "Mountain Biking":
					case "Skiing": {
						String clima = this.textClima.getText().trim();
						double distanciaH = Double.parseDouble(this.textDistanciaH.getText().trim());
						double distanciaV = Double.parseDouble(this.textDistanciaV.getText().trim());
						switch (sport) {
							case "Snowboarding":
								insere = u.addActivity(new Snowboarding(name, date, time, distanciaH, distanciaV, clima), "Snowboarding");
								break;
							case "Mountain Biking":
								insere = u.addActivity(new MountainBiking(name, date, time, distanciaH, distanciaV, clima), "MountainBiking");
								break;
							case "Skiing":
								insere = u.addActivity(new Skiing(name, date, time, distanciaH, distanciaV, clima), "Skiing");
								break;
							default:
								break;
						}
						break;
					}
					case "Swimming":
					case "Indoor Cycling": {
						double distanciaH = Double.parseDouble(this.textDistanciaH.getText().trim());
						switch (sport) {
							case "Swimming":
								insere = u.addActivity(new Swimming(name, date, time, distanciaH), "Swimming");
								break;
							case "Indoor Cycling":
								insere = u.addActivity(new IndoorCycling(name, date, time, distanciaH), "IndoorCycling");
								break;
							default:
								break;
						}
						break;
					}
					case "Football":
					case "Polo":
					case "Beach Volleyball":
					case "Tennis": {
						String clima = this.textClima.getText().trim();
						int score = (int) this.spinnerPessoal.getValue();
						int scoreAdv = (int) this.spinnerAdversario.getValue();
						switch (sport) {
							case "Football":
								insere = u.addActivity(new Football(name, date, time, score, scoreAdv, clima), "Football");
								break;
							case "Polo":
								insere = u.addActivity(new Polo(name, date, time, score, scoreAdv, clima), "Polo");
								break;
							case "Beach Volleyball":
								insere = u.addActivity(new VolleyBallBeach(name, date, time, score, scoreAdv, clima), "VolleyBallBeach");
								break;
							case "Tennis":
								insere = u.addActivity(new Tennis(name, date, time, score, scoreAdv, clima), "Tennis");
								break;
							default:
								break;
						}
						break;
					}
					case "Handball":
					case "Basketball":
					case "Table Tennis":
					case "Boxing":
					case "Badminton":
					case "Volleyball": {
						int score = (int) this.spinnerPessoal.getValue();
						int scoreAdv = (int) this.spinnerAdversario.getValue();
						switch (sport) {
							case "Handball":
								insere = u.addActivity(new Handball(name, date, time, score, scoreAdv), "Handball");
								break;
							case "Basketball":
								insere = u.addActivity(new Basketball(name, date, time, score, scoreAdv), "Basketball");
								break;
							case "Table Tennis":
								insere = u.addActivity(new TableTennis(name, date, time, score, scoreAdv), "TableTennis");
								break;
							case "Boxing":
								insere = u.addActivity(new Boxing(name, date, time, score, scoreAdv), "Boxing");
								break;
							case "Badminton":
								insere = u.addActivity(new Badminton(name, date, time, score, scoreAdv), "Badminton");
								break;
							case "Volleyball":
								insere = u.addActivity(new VolleyBallIndoor(name, date, time, score, scoreAdv), "VolleyBallIndoor");
								break;
							default:
								break;
						}
						break;
					}
					case "Yoga":
					case "Aerobics":
						switch (sport) {
							case "Yoga":
								insere = u.addActivity(new Yoga(name, date, time), "Yoga");
								break;
							case "Aeorobics":
								insere = u.addActivity(new Aerobics(name, date, time), "Aerobics");
								break;
							default:
								break;
						}
						break;
				}

				if (insere) {
					parent.setVisible(true);
					parent.changeActivities("add");

					this.dispose();
					JOptionPane.showMessageDialog(this, "Atividade adicionada com sucesso...");
				} else {
					JOptionPane.showMessageDialog(this, "Ocorreu um erro. A atividade não foi adicionada...");
				}
			} catch (NumberFormatException e) {
				JOptionPane.showMessageDialog(this, "Dados inseridos incorretamente...");
			}
		}
    }//GEN-LAST:event_butOKAddActActionPerformed

	/**
	 *
	 * @param c
	 * @return
	 */
	public static List<Component> getAllComponents(final Container c) {
		Component[] comps = c.getComponents();
		List<Component> compList = new ArrayList<Component>();
		for (Component comp : comps) {
			compList.add(comp);
			if (comp instanceof Container) {
				compList.addAll(getAllComponents((Container) comp));
			}
		}
		return compList;
	}

    private void cboxSportsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxSportsItemStateChanged
		if (evt.getStateChange() == ItemEvent.SELECTED) {
			String sport = this.cboxSports.getSelectedItem().toString();
			if (sport.equals("Running") || sport.equals("Cycling") || sport.equals("Walking") || sport.equals("Sailing") || sport.equals("Skating") || sport.equals("Orienteering")) {
				this.textClima.setEnabled(true);
				this.textDistanciaH.setEnabled(true);
				this.textDistanciaV.setEnabled(false);
				this.spinnerAdversario.setEnabled(false);
				this.spinnerPessoal.setEnabled(false);
			} else if (sport.equals("Snowboarding") || sport.equals("Mountain Biking") || sport.equals("Skiing")) {
				this.textClima.setEnabled(true);
				this.textDistanciaH.setEnabled(true);
				this.textDistanciaV.setEnabled(true);
				this.spinnerAdversario.setEnabled(false);
				this.spinnerPessoal.setEnabled(false);
			} else if (sport.equals("Swimming") || sport.equals("Indoor Cycling")) {
				this.textClima.setEnabled(false);
				this.textDistanciaH.setEnabled(true);
				this.textDistanciaV.setEnabled(false);
				this.spinnerAdversario.setEnabled(false);
				this.spinnerPessoal.setEnabled(false);
			} else if (sport.equals("Football") || sport.equals("Polo") || sport.equals("Beach Volleyball") || sport.equals("Tennis")) {
				this.textClima.setEnabled(true);
				this.textDistanciaH.setEnabled(false);
				this.textDistanciaV.setEnabled(false);
				this.spinnerAdversario.setEnabled(true);
				this.spinnerPessoal.setEnabled(true);
			} else if (sport.equals("Handball") || sport.equals("Basketball") || sport.equals("Table Tennis") || sport.equals("Boxing") || sport.equals("Badminton") || sport.equals("Volleyball")) {
				this.textClima.setEnabled(false);
				this.textDistanciaH.setEnabled(false);
				this.textDistanciaV.setEnabled(false);
				this.spinnerAdversario.setEnabled(true);
				this.spinnerPessoal.setEnabled(true);
			} else {
				this.textClima.setEnabled(false);
				this.textDistanciaH.setEnabled(false);
				this.textDistanciaV.setEnabled(false);
				this.spinnerAdversario.setEnabled(false);
				this.spinnerPessoal.setEnabled(false);
			}
			if (sport.equals("Swimming"))
				this.labelDistH.setText("m");
			else
				this.labelDistH.setText("KMs");
		}
    }//GEN-LAST:event_cboxSportsItemStateChanged

    private void butCancelAddActActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCancelAddActActionPerformed
		this.parent.setVisible(true);
		this.dispose();
    }//GEN-LAST:event_butCancelAddActActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
		if (this.getName().equals("view")) {
			ArrayList<Component> comps = (ArrayList<Component>) AddViewActivityForm.getAllComponents(this);
			for (Component c : comps) {
				if (c instanceof JTextField) {
					JTextField text = (JTextField) c;
					text.setEditable(false);
				}
				if (c instanceof JComboBox) {
					JComboBox box = (JComboBox) c;
					box.setEnabled(false);
				}
				if (c instanceof JSpinner) {
					JSpinner spin = (JSpinner) c;
					spin.setEnabled(false);
				}
			}
		}
    }//GEN-LAST:event_formWindowOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butCancelAddAct;
    private javax.swing.JButton butOKAddAct;
    private javax.swing.JComboBox cboxAno;
    private javax.swing.JComboBox cboxDia;
    private javax.swing.JComboBox cboxHoraData;
    private javax.swing.JComboBox cboxMes;
    private javax.swing.JComboBox cboxMinsData;
    private javax.swing.JComboBox cboxSports;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelDate;
    private javax.swing.JLabel labelDay;
    private javax.swing.JLabel labelDistH;
    private javax.swing.JLabel labelMonth;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelTime;
    private javax.swing.JLabel labelYear;
    private javax.swing.JSpinner spinnerAdversario;
    private javax.swing.JSpinner spinnerPessoal;
    private javax.swing.JTextField textCalorias;
    private javax.swing.JTextField textClima;
    private javax.swing.JTextField textDistanciaH;
    private javax.swing.JTextField textDistanciaV;
    private javax.swing.JTextField textHoras;
    private javax.swing.JTextField textMins;
    private javax.swing.JTextField textName;
    // End of variables declaration//GEN-END:variables
	private UserForm parent;
	private Activity a;
	private FitnessUM fit;
	private User u;
}
