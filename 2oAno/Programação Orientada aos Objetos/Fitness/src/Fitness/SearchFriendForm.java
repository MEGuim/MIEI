
package Fitness;

import java.util.ArrayList;
import java.util.TreeSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Classe para a criação de janelas
 *
 * @author Bruno Pereira
 * @author João Mano
 * @author Miguel Guimarães
 * @version 2014
 */
public class SearchFriendForm extends javax.swing.JFrame {

	/**
	 * Creates new form AddAmigoForm
     * @param parent
     * @param u
     * @param fit
	 */
	public SearchFriendForm(JFrame parent, User u, FitnessUM fit) {
		initComponents();
		this.parent = parent;
		this.u = u.clone();
		this.fit = fit;
		this.setLocationRelativeTo(this.parent);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textNomeAmigo = new javax.swing.JTextField();
        butPesquisa = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();
        butAddAmigo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pesquisar utilizadores");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PESQUISAR AMIGO"));

        jLabel1.setText("Nome");

        butPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fitness/search.png"))); // NOI18N
        butPesquisa.setToolTipText("Pesquisar utilizadores");
        butPesquisa.setMargin(new java.awt.Insets(2, 9, 2, 9));
        butPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPesquisaActionPerformed(evt);
            }
        });

        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableUsers);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(textNomeAmigo, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(butPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butPesquisa)
                    .addComponent(textNomeAmigo))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        butAddAmigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fitness/add.png"))); // NOI18N
        butAddAmigo.setText("AMIGO");
        butAddAmigo.setToolTipText("Enviar pedido de amizade ao utilizador seleccionado");
        butAddAmigo.setIconTextGap(10);
        butAddAmigo.setMargin(new java.awt.Insets(2, 9, 2, 9));
        butAddAmigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddAmigoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(butAddAmigo)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butAddAmigo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPesquisaActionPerformed
		String nome = this.textNomeAmigo.getText();
		//ArrayList<User> friends = new ArrayList<>();
		if (!nome.isEmpty()) {
			TreeSet<Person> people = (TreeSet<Person>) this.fit.getUserList();
			DefaultTableModel dtm = (DefaultTableModel) this.tableUsers.getModel();
			dtm.setRowCount(0);
			for (Person p : people) {
				if (p instanceof User) {
					if (p.getName().startsWith(nome))
						dtm.addRow(new Object[] {p.getName(), p.getEmail()});
				}
			}
			
			this.tableUsers.setModel(dtm);
		}
    }//GEN-LAST:event_butPesquisaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		this.parent.setVisible(true);
		this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void butAddAmigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddAmigoActionPerformed
		if (this.tableUsers.getSelectedRowCount() > 0) {
			User friend = this.fit.getUserByEmail((String) this.tableUsers.getValueAt(this.tableUsers.getSelectedRow(), 1));
			String email = friend.getEmail();
			if (!this.u.getFriendsList().contains(email)) {
				friend.addFriendToMessage(this.u.getEmail());
				JOptionPane.showMessageDialog(this, "Pedido de amizade enviado.\nSe o seu pedido for aceite, " + this.tableUsers.getValueAt(this.tableUsers.getSelectedRow(), 0) + "será adicionado à sua lista de amigos!");
			}
			else{
				JOptionPane.showMessageDialog(this, "Este utilizador já faz parte da sua lista de amigos...");
			}
		}
    }//GEN-LAST:event_butAddAmigoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAddAmigo;
    private javax.swing.JButton butPesquisa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableUsers;
    private javax.swing.JTextField textNomeAmigo;
    // End of variables declaration//GEN-END:variables
	private JFrame parent;
	private User u;
	private FitnessUM fit;
}
