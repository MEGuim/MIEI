/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fitness;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

/**
 * Classe para a criação de janelas
 *
 * @author Bruno Pereira
 * @author João Mano
 * @author Miguel Guimarães
 * @version 2014
 */
public class FriendRequestListForm extends javax.swing.JFrame {

	/**
	 * Creates new form PedidosAmizade
	 *
	 * @param parent
	 * @param fit
	 */
	public FriendRequestListForm(JFrame parent, FitnessUM fit) {
		initComponents();
		this.setLocationRelativeTo(parent);
		this.fit = fit;
		this.parent = parent;
		if (parent instanceof AdminForm) {
			TitledBorder bord = (TitledBorder) this.jPanel1.getBorder();
			bord.setTitle("REMOVER UTILIZADOR");
			this.jPanel1.setBorder(bord);
			this.setTitle("Remover utilizador");
			this.butAddAmigo.setToolTipText("Remover utilizador seleccionado");
			this.butRejeitaAmigo.setToolTipText("Cancelar");
			this.preencheUsers();
		} else {
			this.setTitle("Pedidos de amizade");
			this.preenchePedidos();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        butAddAmigo = new javax.swing.JButton();
        butRejeitaAmigo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("framePedidosAmizade"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Pedidos de Amizade"));

        butAddAmigo.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        butAddAmigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fitness/ok2.png"))); // NOI18N
        butAddAmigo.setToolTipText("Adicionar amigo");
        butAddAmigo.setIconTextGap(10);
        butAddAmigo.setMargin(new java.awt.Insets(2, 9, 2, 9));
        butAddAmigo.setMaximumSize(new java.awt.Dimension(40, 29));
        butAddAmigo.setMinimumSize(new java.awt.Dimension(40, 29));
        butAddAmigo.setNextFocusableComponent(butRejeitaAmigo);
        butAddAmigo.setPreferredSize(new java.awt.Dimension(40, 29));
        butAddAmigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddAmigoActionPerformed(evt);
            }
        });

        butRejeitaAmigo.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        butRejeitaAmigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Fitness/delete.png"))); // NOI18N
        butRejeitaAmigo.setToolTipText("Rejeitar pedido de amizade");
        butRejeitaAmigo.setIconTextGap(10);
        butRejeitaAmigo.setMargin(new java.awt.Insets(2, 9, 2, 9));
        butRejeitaAmigo.setMaximumSize(new java.awt.Dimension(40, 25));
        butRejeitaAmigo.setMinimumSize(new java.awt.Dimension(40, 25));
        butRejeitaAmigo.setNextFocusableComponent(butAddAmigo);
        butRejeitaAmigo.setPreferredSize(new java.awt.Dimension(40, 25));
        butRejeitaAmigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRejeitaAmigoActionPerformed(evt);
            }
        });

        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableUsers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tableUsers);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(butRejeitaAmigo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butAddAmigo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(175, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(butAddAmigo, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(butRejeitaAmigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butAddAmigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddAmigoActionPerformed
		if (this.tableUsers.getSelectedRowCount() > 0) {
			if (this.parent instanceof UserForm) {
				UserForm usr = (UserForm) this.parent;
				String mailUser = ((User) this.fit.getActivePerson()).getEmail();
				String mail = this.tableUsers.getValueAt(this.tableUsers.getSelectedRow(), 1).toString();
				this.fit.acceptFriend(this.fit.getUserByEmail(mailUser), mail);
				this.removePedido(mailUser, mail);
				usr.preencheTabAmigos();
				//this.preenchePedidos();
			} else {
				int res = JOptionPane.showConfirmDialog(this, "Deseja remover o utilizador? Será removido definitivamente...", "Remover?", JOptionPane.YES_NO_OPTION);
				if (res == JOptionPane.YES_OPTION) {
					String mail = this.tableUsers.getValueAt(this.tableUsers.getSelectedRow(), 1).toString();
					if (this.fit.removeUser(mail)) {
						JOptionPane.showMessageDialog(this, "Utilizador removido...");
					} else {
						JOptionPane.showMessageDialog(this, "ERRO: Utilizador não removido...");
					}
					this.preencheUsers();
				}
			}

		}
    }//GEN-LAST:event_butAddAmigoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		this.parent.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void butRejeitaAmigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRejeitaAmigoActionPerformed
		if (this.tableUsers.getSelectedRowCount() > 0) {
			if (this.parent instanceof UserForm) {
				UserForm usr = (UserForm) this.parent;
				String mailUser = ((User) this.fit.getActivePerson()).getEmail();
				String mail = this.tableUsers.getValueAt(this.tableUsers.getSelectedRow(), 1).toString();
				this.removePedido(mailUser, mail);
				usr.preencheTabAmigos();
			}
			else{
				this.dispose();
				this.parent.setVisible(true);
			}
		} else if (this.parent instanceof AdminForm) {
			this.dispose();
			this.parent.setVisible(true);
		}
    }//GEN-LAST:event_butRejeitaAmigoActionPerformed

	private void preenchePedidos() {
		User u = this.fit.getUserByEmail(this.fit.getActivePerson().getEmail());
		ArrayList<String> msgsUser = new ArrayList<>(u.getMessage());
		DefaultTableModel dtm = (DefaultTableModel) this.tableUsers.getModel();
		dtm.setRowCount(0);

		for (String s : msgsUser) {
			dtm.addRow(new Object[] {this.fit.getUserByEmail(s).getName(), s});
		}
		this.tableUsers.setModel(dtm);
	}

	private void preencheUsers() {
		DefaultTableModel dtm = (DefaultTableModel) this.tableUsers.getModel();
		dtm.setRowCount(0);
		
		for (Person p : this.fit.getUserList()) {
			if (p instanceof User) {
				dtm.addRow(new Object[]{p.getName(), p.getEmail()});
			}
		}
		this.tableUsers.setModel(dtm);
	}

	private void removePedido(String userMail, String email) {
		User u = this.fit.getUserByEmail(userMail);
		u.removeFriendFromMessage(email);
		this.preenchePedidos();
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAddAmigo;
    private javax.swing.JButton butRejeitaAmigo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableUsers;
    // End of variables declaration//GEN-END:variables
	FitnessUM fit;
	JFrame parent;
	String mode;
}
